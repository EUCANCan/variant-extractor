name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    environment:
        name: pypi
        url: https://pypi.org/p/variant-extractor
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write

    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Python Semantic Release
      id: release
      uses: python-semantic-release/python-semantic-release@v9.20.0
      with:
        build: false
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build package
      if: steps.release.outputs.released == 'true'
      run: python -m build

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # The following line is required to ensure that the package is only published to PyPI when a new version is released.
      # NOTE: DO NOT wrap the conditional in ${{ }} as it will always evaluate to true.
      # See https://github.com/actions/runner/issues/1173
      if: steps.release.outputs.released == 'true'

    - name: Publish package distributions to GitHub Releases
      uses: python-semantic-release/publish-action@v9.20.0
      if: steps.release.outputs.released == 'true'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.release.outputs.tag }}

    - name: Set permissions  # Sphinx needs write permissions to perform the checkout
      run: |
        sudo chmod -R 777 .

    - id: deployment_docs
      uses: sphinx-notes/pages@v3
      with:
        publish: false
        documentation_path: './docs/source'
      if: steps.release.outputs.released == 'true'
  
    - uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ${{ steps.deployment_docs.outputs.artifact }}
      if: steps.release.outputs.released == 'true'
