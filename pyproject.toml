[build-system]
requires = ["setuptools ~= 75.3.0", "wheel ~= 0.42"]
build-backend = "setuptools.build_meta"

[project]
name = "variant-extractor"
version = "4.0.9"
description = "Deterministic and standard extractor of indels, SNVs and structural variants (SVs) from VCF files."
readme = "README.md"
authors = [
    { name = "Rapsssito", email = "contact@rodrigomartin.dev" }
]
license = { text = "MIT" }
requires-python = ">=3.6"
keywords = ["vcf", "genetics", "bioinformatics", "variant", "indel", "snv", "sv"]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent"
]

[project.urls]
homepage = "https://github.com/EUCANCan/variant-extractor"
issues = "https://github.com/EUCANCan/variant-extractor/issues"
repository = "https://github.com/EUCANCan/variant-extractor.git"
documentation = "https://EUCANCan.github.io/variant-extractor/"

[project.optional-dependencies]
build = [
  "build ~= 1.2"
]
docs = [
  "sphinx",
  "sphinx-rtd-theme",
  "myst_parser",
  "docutils>=0.18.0"
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.semantic_release]
assets = []
version_variables = ["src/variant_extractor/__init__.py:__version__"]
version_toml = ["pyproject.toml:project.version"]
build_command = "python -m build"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = ["build", "chore", "ci", "docs", "style", "test", "Initial commit"]

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
